{"ast":null,"code":"var _jsxFileName = \"/Users/ciarandurnin/Documents/Programming/MERN Tutorial/react-frontend-01-starting-setup/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer } from \"react\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return { ...state,\n        value: action.val,\n        isValid: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value\n    });\n  };\n\n  const element = props.element === \"input\" ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputStateValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${inputState.isValid && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, props.label), element, inputState.isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/ciarandurnin/Documents/Programming/MERN Tutorial/react-frontend-01-starting-setup/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","inputReducer","state","action","type","value","val","isValid","Input","props","inputState","dispatch","changeHandler","event","target","element","id","placeholder","inputStateValue","rows","label","errorText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,aAAP;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFT;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOL,KAAP;AARJ;AAUD,CAXD;;AAaA,MAAMM,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACC,YAAD,EAAe;AACtDI,IAAAA,KAAK,EAAE,EAD+C;AAEtDE,IAAAA,OAAO,EAAE;AAF6C,GAAf,CAAzC;;AAIA,QAAMK,aAAa,GAAIC,KAAD,IAAW;AAC7BF,IAAAA,QAAQ,CAAC;AAACP,MAAAA,IAAI,EAAE,QAAP;AAAiBE,MAAAA,GAAG,EAAEO,KAAK,CAACC,MAAN,CAAaT;AAAnC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMU,OAAO,GACXN,KAAK,CAACM,OAAN,KAAkB,OAAlB,gBACE;AAAO,IAAA,EAAE,EAAEN,KAAK,CAACO,EAAjB;AAAqB,IAAA,IAAI,EAAEP,KAAK,CAACL,IAAjC;AAAuC,IAAA,WAAW,EAAEK,KAAK,CAACQ,WAA1D;AAAuE,IAAA,QAAQ,EAAEL,aAAjF;AAAgG,IAAA,KAAK,EAAEM,eAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAGE;AAAU,IAAA,EAAE,EAAET,KAAK,CAACO,EAApB;AAAwB,IAAA,IAAI,EAAEP,KAAK,CAACU,IAAN,IAAc,CAA5C;AAA+C,IAAA,QAAQ,EAAEP,aAAzD;AAAwE,IAAA,KAAK,EAAEF,UAAU,CAACL,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ;AAOA,sBACE;AAAK,IAAA,SAAS,EAAG,gBAAeK,UAAU,CAACH,OAAX,IAAsB,uBAAwB,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEE,KAAK,CAACO,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACW,KAAjC,CADF,EAEGL,OAFH,EAGGL,UAAU,CAACH,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,KAAK,CAACY,SAAV,CAHzB,CADF;AAOD,CAvBD;;AAyBA,eAAeb,KAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false,\n  });\n  const changeHandler = (event) => {\n      dispatch({type: 'CHANGE', val: event.target.value})\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input id={props.id} type={props.type} placeholder={props.placeholder} onChange={changeHandler} value={inputStateValue}/>\n    ) : (\n      <textarea id={props.id} rows={props.rows || 3} onChange={changeHandler} value={inputState.value} />\n    );\n\n  return (\n    <div className={`form-control ${inputState.isValid && 'form-control--invalid'}`}>\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {inputState.isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}