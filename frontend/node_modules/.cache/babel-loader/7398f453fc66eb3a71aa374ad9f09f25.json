{"ast":null,"code":"var _jsxFileName = \"/Users/ciarandurnin/Documents/Programming/MERN Tutorial/react-frontend-01-starting-setup/src/user/pages/Auth.js\";\n//Add form - Use form hook\n/// renders email & Password\n// Add Validation\nimport React, { useState } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_EMAIL } from \"../../shared/util/validators\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"email\",\n    label: \"Email\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password\",\n    onInput: inputHandler,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN'));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/ciarandurnin/Documents/Programming/MERN Tutorial/react-frontend-01-starting-setup/src/user/pages/Auth.js"],"names":["React","useState","Input","Card","Button","useForm","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","Auth","isLoginMode","setIsLoginMode","formState","inputHandler","email","value","isValid","password","switchModeHandler","prevMode","authSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":"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","sourcesContent":["//Add form - Use form hook\n/// renders email & Password\n// Add Validation\nimport React, { useState } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_EMAIL,\n} from \"../../shared/util/validators\";\n\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return (\n    <Card className=\"authentication\">\n      <h2>Login Required</h2>\n      <hr />\n      <form className=\"place-form\" onSubmit={authSubmitHandler}>\n        {!isLoginMode && <Input element=\"input\" id=\"name\" type=\"text\" label=\"Name\" />}\n        <Input\n          id=\"email\"\n          element=\"input\"\n          type=\"email\"\n          label=\"Email\"\n          validators={[VALIDATOR_EMAIL()]}\n          errorText=\"Please enter a valid email\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"password\"\n          element=\"input\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password\"\n          onInput={inputHandler}\n          type=\"password\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? 'LOGIN': 'SIGNUP'}\n        </Button>\n      </form>\n      <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? 'SIGNUP': 'LOGIN'}\n      </Button>\n    </Card>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}