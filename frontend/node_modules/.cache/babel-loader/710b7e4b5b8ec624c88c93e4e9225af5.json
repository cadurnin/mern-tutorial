{"ast":null,"code":"var _jsxFileName = \"/Users/ciarandurnin/Documents/Programming/MERN Tutorial/react-frontend-01-starting-setup/src/places/pages/UpdatePlace.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./PlaceForm.css\";\nconst DUMMY_PLACES = [{\n  id: \"p1\",\n  title: \"Empire State Building\",\n  description: \"Very famous sky scraper\",\n  imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Empire_State_Building_Entrance_decoration_%286046008895%29.jpg/1280px-Empire_State_Building_Entrance_decoration_%286046008895%29.jpg\",\n  address: \"1234 Fake Street\",\n  location: {\n    lat: 40.74858678282475,\n    lng: -73.98566440202913\n  },\n  creator: \"u1\"\n}];\n\nconst UpdatePlace = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  const [formState, inputHandler, setFormData] = useForm({\n    title: {\n      value: identifiedPlace.title,\n      isValid: true\n    },\n    description: {\n      value: identifiedPlace.description,\n      isValid: true\n    }\n  }, true);\n  useEffect(() => {\n    setFormData({\n      title: {\n        value: identifiedPlace.title,\n        isValid: true\n      },\n      description: {\n        value: identifiedPlace.description,\n        isValid: true\n      }\n    }, true);\n    setIsLoading(false);\n  }, [setFormData, identifiedPlace]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!identifiedPlace) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Could not find place!\"));\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Loading\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"title\",\n    validators: [VALIDATOR_REQUIRE],\n    errorText: \"Please enter a valid title\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.title.value,\n    initialValid: formState.inputs.title.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description\",\n    onInput: inputHandler,\n    initialValue: formState.inputs.description.value,\n    initialValid: formState.inputs.description.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"UPDATE PLACE\"));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["/Users/ciarandurnin/Documents/Programming/MERN Tutorial/react-frontend-01-starting-setup/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useState","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","isLoading","setIsLoading","placeId","identifiedPlace","find","p","formState","inputHandler","setFormData","value","isValid","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./PlaceForm.css\";\n\nconst DUMMY_PLACES = [\n  {\n    id: \"p1\",\n    title: \"Empire State Building\",\n    description: \"Very famous sky scraper\",\n    imageUrl:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Empire_State_Building_Entrance_decoration_%286046008895%29.jpg/1280px-Empire_State_Building_Entrance_decoration_%286046008895%29.jpg\",\n    address: \"1234 Fake Street\",\n    location: {\n      lat: 40.74858678282475,\n      lng: -73.98566440202913,\n    },\n    creator: \"u1\",\n  },\n];\n\nconst UpdatePlace = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: identifiedPlace.title,\n        isValid: true,\n      },\n      description: {\n        value: identifiedPlace.description,\n        isValid: true,\n      },\n    },\n    true\n  );\n\n  useEffect(() => {\n    \n    setFormData(\n      {\n        title: {\n          value: identifiedPlace.title,\n          isValid: true,\n        },\n        description: {\n          value: identifiedPlace.description,\n          isValid: true,\n        },\n      },\n      true\n    );\n    setIsLoading(false);\n  }, [setFormData, identifiedPlace]);\n\n  const placeUpdateSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  if (!identifiedPlace) {\n    return (\n      <div className=\"center\">\n        <h2>Could not find place!</h2>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <h2>Loading</h2>\n      </div>\n    );\n  }\n  return (\n    <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"title\"\n        validators={[VALIDATOR_REQUIRE]}\n        errorText=\"Please enter a valid title\"\n        onInput={inputHandler}\n        initialValue={formState.inputs.title.value}\n        initialValid={formState.inputs.title.isValid}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description\"\n        onInput={inputHandler}\n        initialValue={formState.inputs.description.value}\n        initialValid={formState.inputs.description.isValid}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        UPDATE PLACE\n      </Button>\n    </form>\n  );\n};\n\nexport default UpdatePlace;\n"]},"metadata":{},"sourceType":"module"}